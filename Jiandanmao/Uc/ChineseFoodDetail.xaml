<UserControl x:Class="Jiandanmao.Uc.ChineseFoodDetail"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             MinHeight="600" MinWidth="800"
             x:Name="ChineseFoodDetailControl"
             xmlns:convert="clr-namespace:Jiandanmao.Converter">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding ElementName=ChineseFoodDetailControl}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="22"></Setter>
                <Setter Property="FontFamily" Value="微软雅黑,Arial,SimSun,宋体,Sans-serif,Serif"/>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <materialDesign:DialogHost>
        <materialDesign:DialogHost.DialogContent>
            <StackPanel Margin="16">
                <TextBlock FontSize="22">请输入退菜数量</TextBlock>
                <TextBox Margin="0 8 0 0" FontSize="22" HorizontalAlignment="Stretch" Text="{Binding ReturnQuantity}" />
                <ComboBox Grid.Column="1" FontSize="22" Margin="0 10 0 0" materialDesign:HintAssist.Hint="输入或选择退菜原因" IsEditable="True" materialDesign:HintAssist.HintOpacity=".26" Text="{Binding ReturnReason}" ItemsSource="{Binding ReturnReasons}" >
                </ComboBox>
                <materialDesign:Snackbar x:Name="snackbar" MessageQueue="{materialDesign:MessageQueue}" Foreground="Red" Background="#fff" />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsDefault="True" Margin="0 8 8 0" Content="确定" Command="{Binding UnsubscribeCommand}" CommandParameter="{Binding ElementName=snackbar}"/>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" Margin="0 8 8 0" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Content="取消"/>
                </StackPanel>
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>
        <Grid Margin="20 10 20 10">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding Product.Name}" HorizontalAlignment="Center" FontSize="22"></TextBlock>
            <Button Style="{DynamicResource MaterialDesignFlatButton}" HorizontalAlignment="Right" Width="60" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                <Button.Content>
                    <materialDesign:PackIcon Kind="Close"></materialDesign:PackIcon>
                </Button.Content>
            </Button>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="350"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <TextBlock>原价：</TextBlock>
                    <TextBox Grid.Column="1" Text="{Binding OriginalPrice}" FontSize="20" Height="40" Foreground="Red" x:Name="txtOriginalPrice" Padding="0 0 0 5" PreviewTextInput="Txt_PreviewTextInput" GotFocus="Txt_GotFocus">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding OriginalPriceChangedCommand}" CommandParameter="{Binding ElementName=txtOriginalPrice}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                    <!--<TextBlock Grid.Column="1">￥<TextBlock Text="{Binding OriginalPrice}"></TextBlock></TextBlock>-->
                    <Button Grid.Column="1" FontFamily="微软雅黑" Content="退菜" HorizontalAlignment="Right" IsEnabled="{Binding CanReturn}" Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"/>

                    <TextBlock Grid.Row="1">单价：</TextBlock>
                    <TextBox Grid.Row="1" FontSize="20" Text="{Binding Price}" Grid.Column="1" Height="40" Foreground="Red" x:Name="txtPrice" Padding="0 0 0 5" PreviewTextInput="Txt_PreviewTextInput" GotFocus="Txt_GotFocus">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding PriceChangedCommand}" CommandParameter="{Binding ElementName=txtPrice}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <TextBlock Grid.Row="2">折扣：</TextBlock>
                    <TextBox Grid.Row="2" FontSize="20" Text="{Binding Discount}" Grid.Column="1" Foreground="Red" x:Name="txtDistance" Padding="0 0 0 5" PreviewTextInput="Txt_PreviewTextInput" GotFocus="Txt_GotFocus">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding DistanceChangedCommand}" CommandParameter="{Binding ElementName=txtDistance}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>

                    <TextBlock Grid.Row="3">数量：</TextBlock>
                    <Grid Grid.Row="3" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" IsEnabled="{Binding Enable}" Height="26" Width="26" Command="{Binding ReduceCommand}">
                            <materialDesign:PackIcon Kind="Minus" Height="24" Width="24" />
                        </Button>
                        <TextBlock Grid.Column="1" Text="{Binding Quantity}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                        <Button Grid.Column="2" Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}" IsEnabled="{Binding Enable}" Command="{Binding IncreaseCommand}" Height="26" Width="26">
                            <materialDesign:PackIcon Kind="Plus" Height="24" Width="24" />
                        </Button>
                    </Grid>

                    <TextBlock Grid.Row="4">小计：</TextBlock>
                    <TextBlock Grid.Row="4" Grid.Column="1" Foreground="Red">￥<TextBlock Text="{Binding Amount}"></TextBlock></TextBlock>

                    <TextBlock Grid.Row="5">备注：</TextBlock>
                    <ComboBox Grid.Row="5" Grid.Column="1" materialDesign:HintAssist.Hint="输入或选择" IsEditable="True" materialDesign:HintAssist.HintOpacity=".26" IsEnabled="{Binding Enable}" FontFamily="微软雅黑" Text="{Binding Remark}" ItemsSource="{Binding GoodRemarks}" >
                    </ComboBox>
                </Grid>
                <StackPanel Grid.Column="1">
                    <Border Background="{DynamicResource MaterialDesignBackground}" x:Name="formatContainter" Height="150">
                        <GroupBox Header="规格" Style="{DynamicResource MaterialDesignGroupBox}" Margin="16" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <GroupBox.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="8,0,0,0" FontSize="20" VerticalAlignment="Center" Text="{Binding}" />
                                </DataTemplate>
                            </GroupBox.HeaderTemplate>
                            <ItemsControl ItemsSource="{Binding Formats}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border x:Name="Border" BorderBrush="#ddd" BorderThickness="1" Padding="5" Margin="0 0 8 0" CornerRadius="5">
                                            <StackPanel DataContext="{Binding DataContext, ElementName=ChineseFoodDetailControl}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseUp">
                                                        <i:InvokeCommandAction Command="{Binding SelectedFormatCommand}" CommandParameter="{Binding DataContext, ElementName=Border}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <TextBlock x:Name="TextBlock" Text="{Binding Content}" DataContext="{Binding DataContext, ElementName=Border}"></TextBlock>
                                            </StackPanel>
                                        </Border>

                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#009789" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#009789" />
                                                <Setter TargetName="TextBlock" Property="Foreground" Value="#fff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                    </Border>
                    <Border Background="{DynamicResource MaterialDesignBackground}" MinHeight="150">
                        <GroupBox Header="口味" Style="{DynamicResource MaterialDesignGroupBox}" Margin="16" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <GroupBox.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Margin="8,0,0,0" FontSize="20" VerticalAlignment="Center" Text="{Binding}" />
                                </DataTemplate>
                            </GroupBox.HeaderTemplate>
                            <ItemsControl ItemsSource="{Binding Flavors}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Border x:Name="Border" BorderBrush="#ddd" BorderThickness="1" Padding="5" Margin="0 0 8 0" CornerRadius="5">
                                            <StackPanel DataContext="{Binding DataContext, ElementName=ChineseFoodDetailControl}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseUp">
                                                        <i:InvokeCommandAction Command="{Binding ClickItemCommand}" CommandParameter="{Binding DataContext, ElementName=Border}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <TextBlock x:Name="TextBlock" Text="{Binding Content}" DataContext="{Binding DataContext, ElementName=Border}"></TextBlock>
                                            </StackPanel>
                                        </Border>

                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="#009789" />
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#009789" />
                                                <Setter TargetName="TextBlock" Property="Foreground" Value="#fff" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </GroupBox>
                    </Border>
                </StackPanel>
            </Grid>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">取消</Button>
                <Button Command="{Binding SaveCommand}">确定</Button>
            </StackPanel>
        </Grid>
    </materialDesign:DialogHost>
</UserControl>
