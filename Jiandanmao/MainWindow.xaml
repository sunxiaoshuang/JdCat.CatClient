<controls:MetroWindow x:Class="Jiandanmao.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Jiandanmao.ViewModel"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="Arial,SimSun,宋体,Sans-serif,Serif"
        Title="简单猫" Height="600" Width="1000" 
        Icon="favicon.ico" MinHeight="500" MinWidth="700"
        WindowState="Maximized">

    <!--<controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands ShowLastSeparator="False">
            --><!--<Button ToolTip="版本更新" 
                    Content="更新" Click="Update_OnClick"/>--><!--
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>



    <materialDesign:DialogHost x:Name="MainDialogHost" Identifier="RootDialog">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent >
                <DockPanel MinWidth="150">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="10 10 25 0" Height="30" Width="30" IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                    <ListBox SelectedIndex="0" PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp" ItemsSource="{Binding Items}" x:Name="ItemListBox">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="viewmodel:ContorllerItem">
                                <TextBlock Text="{Binding Name}" Margin="32 0 32 0" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel Background="{DynamicResource MaterialDesignPaper}">
                <materialDesign:ColorZone DockPanel.Dock="Top"  Height="40" Padding="0 0 0 0" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                    <DockPanel Height="40">
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                        x:Name="MenuToggleButton"
                                      ToolTip="功能目录"
                              Height="30"
                              Width="30"
                              Margin="10 0 0 0"
                              HorizontalAlignment="Left" 
                              />
                        --><!--<StackPanel HorizontalAlignment="Right"  DockPanel.Dock="Right"   Orientation="Horizontal">
                            <Button Style="{StaticResource MaterialDesignFlatButton}" Width="30" Padding="0" 
                                    Click="ButtonBase_OnClick" ToolTip="最小化">
                                <md:PackIcon Kind="MinusCircleOutline" Width="30" Height="30" Foreground="{DynamicResource MaterialDesignBody}" />
                            </Button>
                            <Button Margin="10 0 0 0" Style="{StaticResource MaterialDesignFlatButton}" Padding="0" Width="30"
                                     Click="CloseWindow_OnClick" ToolTip="关闭软件">
                                <md:PackIcon Kind="CloseCircleOutline" Width="30" Height="30" Foreground="#e64a19" />
                            </Button>
                        </StackPanel>--><!--
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <ScrollViewer 
                                  HorizontalScrollBarVisibility="{Binding ElementName=ItemListBox, Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                                  VerticalScrollBarVisibility="{Binding ElementName=ItemListBox, Path=SelectedItem.VerticalScrollBarVisibilityRequirement}" 
                                  Padding="{Binding ElementName=ItemListBox, Path=SelectedItem.MarginRequirement}">
                        <ContentControl Content="{Binding ElementName=ItemListBox, Path=SelectedItem.Content}" />
                    </ScrollViewer>
                    <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar"/>
                </Grid>

            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>-->


    <Window.CommandBindings>
        <!--<CommandBinding Command="Copy" Executed="OnCopy"></CommandBinding>-->
    </Window.CommandBindings>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!-- data template used for the dialogs example, defines a View for a ViewModel of type DateTime  -->
            <DataTemplate DataType="{x:Type system:DateTime}">
                <StackPanel Margin="16">
                    <TextBlock>England win the World Cup:</TextBlock>
                    <TextBlock Margin="0 8 0 0" Text="{Binding }" />
                    <TextBlock Margin="0 8 0 0" >You will never see that again.</TextBlock>
                    <Button  Margin="0 8 0 0" IsDefault="True" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Style="{DynamicResource MaterialDesignFlatButton}">AWESOME</Button>
                </StackPanel>
            </DataTemplate>
            
            <Style TargetType="{x:Type Window}">
                <Setter Property="FontFamily" Value="MSYH" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost Identifier="RootDialog" SnackbarMessageQueue="{Binding ElementName=MainSnackbar, Path=MessageQueue}">
        <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="212">
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="16" IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                    <ListBox x:Name="DemoItemsListBox" Margin="0 16 0 16" SelectedIndex="0"                         
                             ItemsSource="{Binding Items}"
                             PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="60" />
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding Name}" FontSize="22" Margin="32 0 32 0" />
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2" Mode="PrimaryMid" DockPanel.Dock="Top">
                    <DockPanel>
                        <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False" x:Name="MenuToggleButton"/>
                        <materialDesign:PopupBox DockPanel.Dock="Right" PlacementMode="BottomAndAlignRightEdges" StaysOpen="False">
                            <StackPanel>
                                <!--<Button Content="帐号信息" Click="MenuPopupButton_OnClick"/>-->
                                <Button Content="数据同步" Click="Sync_Click"/>
                                <Button Content="数据上传" Click="Upload_Click"/>
                                <!--<Button Content="备注" IsEnabled="False" />-->
                                <Separator/>
                                <Button Content="设置自动启动" Click="AutoStart_Click"/>
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22" x:Name="title">简单猫</TextBlock>
                    </DockPanel>
                </materialDesign:ColorZone>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ScrollViewer Grid.Row="1" 
                                  HorizontalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.HorizontalScrollBarVisibilityRequirement}"
                                  VerticalScrollBarVisibility="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.VerticalScrollBarVisibilityRequirement}" 
                                  Padding="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.MarginRequirement}">
                        <ContentControl Content="{Binding ElementName=DemoItemsListBox, Path=SelectedItem.Content}" />
                    </ScrollViewer>

                    <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}" x:Name="MainSnackbar" Grid.Row="1" />
                </Grid>
            </DockPanel>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>

</controls:MetroWindow>
